server {
    listen 8080;
    server_name localhost;
    keepalive_timeout 75s;
    client_max_body_size 2m;
    large_client_header_buffers 4 10k;
    location = /config.json {
        alias /etc/nginx/conf.d/config-<%=ENV['spring_profiles_active']%>.json;
    }

    location = /health {
        return 200 '{"status":"UP"}';
        add_header Content-Type application/json;
    }

    server_tokens off;

    add_header "X-UA-Compatible" "IE=Edge";
    proxy_cookie_path / "/; HttpOnly; Secure; SameSite=Lax";

    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
    add_header Permissions-Policy "fullscreen=(),geolocation=(self)";
    add_header Referrer-Policy "strict-origin";

    location ~ /\. {
        deny all;
        return 404;
    }

    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        index index.html index.htm;
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '<%=ENV["WRAPPER"]%>';
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            add_header 'Access-Control-Allow-Credentials' 'true';
            #
            # Custom headers and headers various browsers *should* be OK with but aren't
            #
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            #
            # Tell client that this pre-flight info is valid for 20 days
            #
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            #
            # Config required for CISO
            #
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header Content-Security-Policy "default-src 'self'; font-src * data:; img-src * data:; script-src * 'unsafe-inline' 'unsafe-eval' 'self'; style-src * 'unsafe-inline'; connect-src *;" always;
            return 204;
        }
        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' '<%=ENV["WRAPPER"]%>';
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            #
            # Config required for CISO
            #
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header Content-Security-Policy "default-src 'self'; font-src * data:; img-src * data:; script-src * 'unsafe-inline' 'unsafe-eval' 'self'; style-src * 'unsafe-inline'; connect-src *;" always;
        }
    }

    location = /v2/sso/token_validator {
        proxy_connect_timeout 180;
        proxy_send_timeout 180;
        proxy_read_timeout 180;
        send_timeout 180;
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
        proxy_pass <%=ENV["url_gateway"]%>/v2/sso/token_validator;
    }

    location ~ ^/v1/(.*)$ {
        proxy_connect_timeout 180;
        proxy_send_timeout 180;
        proxy_read_timeout 180;
        send_timeout 180;
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
        proxy_pass <%=ENV["url_gateway"]%>/v1/$1;
    }

    location ~ ^/v2/(.*)$ {
        proxy_connect_timeout 180;
        proxy_send_timeout 180;
        proxy_read_timeout 180;
        send_timeout 180;
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
        proxy_pass <%=ENV["url_gateway"]%>/v2/$1;
    }

    location = /swagger-ui.html {
      proxy_pass <%=ENV["url_gateway"]%>/webjars/swagger-ui/index.html;
      sub_filter ./ <%=ENV["url_gateway"]%>/webjars/swagger-ui/;
      sub_filter index.css <%=ENV["url_gateway"]%>/webjars/swagger-ui/index.css;
      sub_filter_once off;
    }

    error_page 404 /404.html;
    location = /404.html {
        root /etc/nginx/conf.d;
        internal;
    }

    location = /.assets/img/favicon/favicon.ico {
        return 200;
    }

    # Allow inserting the application from an iFrame
    # add_header X-Frame-Options "ALLOW-FROM <%=ENV['SUPERNET_WRAPPER']%>";
    # add_header Content-Security-Policy "default-src 'self'; frame-src https://mxmrvldssqai001.cert.mx.corp:1445; object-src 'none'";
    # add_header Content-Security-Policy "frame-ancestors 'https://mxmrvldssqai001.cert.mx.corp:1445'";
}



